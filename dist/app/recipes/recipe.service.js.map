{"version":3,"file":"recipe.service.js","sourceRoot":"","sources":["../../src/app/recipes/recipe.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAyC,eAAe,CAAC,CAAA;AACzD,qBAAwC,eAAe,CAAC,CAAA;AAExD,uBAAuB,UAAU,CAAC,CAAA;AAClC,uBAA2B,WAAW,CAAC,CAAA;AAGvC;IAWI,uBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAV9B,mBAAc,GAAG,IAAI,mBAAY,EAAY,CAAC;QAEtC,YAAO,GAAc;YACzB,IAAI,eAAM,CAAC,WAAW,EAAE,YAAY,EAAE,iGAAiG,EAAE;gBACrI,IAAI,mBAAU,CAAC,cAAc,EAAE,CAAC,CAAC;gBACjC,IAAI,mBAAU,CAAC,WAAW,EAAE,CAAC,CAAC;aACjC,CAAC;YACF,IAAI,eAAM,CAAC,cAAc,EAAE,SAAS,EAAE,gFAAgF,EAAE,EAAE,CAAC;SAC9H,CAAA;IAEgC,CAAC;IAElC,kCAAU,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,iCAAS,GAAT,UAAU,EAAW;QACjB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;IAED,oCAAY,GAAZ,UAAa,MAAc;QACvB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,iCAAS,GAAT,UAAU,MAAc;QACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED,kCAAU,GAAV,UAAW,SAAiB,EAAE,SAAiB;QAC3C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC;IAC9D,CAAC;IAED,iCAAS,GAAT;QACI,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAM,OAAO,GAAG,IAAI,cAAO,CAAC;YACxB,cAAc,EAAE,kBAAkB;SACrC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;IACvD,CAAC;IAED,iCAAS,GAAT;QAAA,iBASC;QARG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;aACnB,GAAG,CAAC,UAAC,QAAkB,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,SAAS,CACN,UAAC,IAAc;YACX,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QAC3C,CAAC,CACJ,CAAC;IACV,CAAC;IAnDL;QAAC,iBAAU,EAAE;;qBAAA;IAoDb,oBAAC;AAAD,CAAC,AAnDD,IAmDC;AAnDY,qBAAa,gBAmDzB,CAAA","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\nimport { Headers, Http, Response } from \"@angular/http\";\n\nimport { Recipe } from \"./recipe\";\nimport { Ingredient } from \"../shared\";\n\n@Injectable()\nexport class RecipeService{\n    recipesChanged = new EventEmitter<Recipe[]>();\n    \n    private recipes : Recipe[] = [\n        new Recipe('Schnitzel', 'Very tasty', 'http://images.derberater.de/files/imagecache/456xXXX_berater/berater/slides/WienerSchnitzel.jpg', [\n            new Ingredient('French Fries', 2),\n            new Ingredient('Pork Meat', 1)\n        ]),\n        new Recipe('Summer Salad', 'Okayish', 'http://ohmyveggies.com/wp-content/uploads/2013/06/the_perfect_summer_salad.jpg', [])    \n    ]\n    \n    constructor(private http: Http) {}\n    \n    getRecipes(){\n        return this.recipes;\n    }\n    \n    getRecipe(id : number){\n        return this.recipes[id];\n    }\n    \n    deleteRecipe(recipe: Recipe){\n        this.recipes.splice(this.recipes.indexOf(recipe), 1);    \n    }\n    \n    addRecipe(recipe: Recipe) {\n        this.recipes.push(recipe);\n    }\n    \n    editRecipe(oldRecipe: Recipe, newRecipe: Recipe) {\n        this.recipes[this.recipes.indexOf(oldRecipe)] = newRecipe;\n    }\n    \n    storeData(){\n        const body = JSON.stringify(this.recipes);\n        const headers = new Headers({\n            'Content-Type': 'application/json'\n        });\n        return this.http.put('', body, {headers: headers});\n    }\n    \n    fetchData(){\n        return this.http.get('')\n            .map((response: Response) => response.json())\n            .subscribe(\n                (data: Recipe[]) => {\n                    this.recipes = data;\n                    this.recipesChanged.emit(this.recipes);\n                }\n            );\n    }\n}"]}