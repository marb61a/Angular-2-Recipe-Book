{"version":3,"file":"recipe-edit.component.js","sourceRoot":"","sources":["../../../src/app/recipes/recipe-edit/recipe-edit.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs/Rx\";\n\nimport {\n    FormArray,\n    FormGroup,\n    FormControl,\n    Validators,\n    FormBuilder,\n    REACTIVE_FORM_DIRECTIVES\n} from '@angular/forms';\n\nimport { RecipeService } from \"../recipe.service\";\nimport { Recipe } from \"../recipe\";\n\n@Component({\n    moduleId : module.id,\n    selector: 'rb-recipe-edit',\n    templateUrl: 'recipe-edit.component.html',\n    styles: [],\n    directives: [REACTIVE_FORM_DIRECTIVES]\n})\n\nexport class RecipeEditComponent implements OnInit, OnDestroy {\n    recipeForm: FormGroup;\n    private recipeIndex: number;\n    private recipe: Recipe;\n    private isNew = true;\n    private subscription: Subscription;\n    \n    constructor(private route: ActivatedRoute,\n              private recipeService: RecipeService,\n              private formBuilder: FormBuilder,\n              private router: Router) {}\n              \n    ngOnInit(){\n        this.subscription = this.route.params.subscribe(\n            (params : any) => {\n                if(params.hasOwnProperty('id')){\n                    this.isNew = false;\n                    this.recipeIndex = +params['id'];\n                    this.recipe = this.recipeService.getRecipe(this.recipeIndex);\n                } else{\n                    this.isNew = true;\n                    this.recipe = null;\n                } \n                \n                this.initForm();\n            }\n        );    \n    }\n    \n    onSubmit(){\n        const newRecipe = this.recipeForm.value;\n        if(this.isNew){\n            this.recipeService.addRecipe(newRecipe);\n        } else{\n            this.recipeService.editRecipe(this.recipe, newRecipe);\n        }\n        this.navigateBack();\n    }\n    \n    onCancel(){\n        this.navigateBack();\n    }\n    \n    onAddItem(name : string, amount: string){\n        (<FormArray>this.recipeForm.controls['ingredients']).push(\n            new FormGroup({\n                name: new FormControl(name, Validators.required),\n                amount: new FormControl(amount, [\n                  Validators.required,\n                  Validators.pattern(\"\\\\d+\")\n                ])\n            })\n        );    \n    }\n    \n    onRemoveItem(index: number){\n        (<FormArray>this.recipeForm.controls['ingredients']).removeAt(index);    \n    }\n    \n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n    \n    private navigateBack() {\n        this.router.navigate(['../']);\n    }\n    \n    private initForm(){\n        let recipeName = '';\n        let recipeImageUrl = '';\n        let recipeContent = '';\n        let recipeIngredients: FormArray = new FormArray([]);\n        \n        if(!this.isNew){\n            if(this.recipe.hasOwnProperty('ingredients')){\n                for(let i = 0; i < this.recipe.ingredients.length; i++){\n                    recipeIngredients.push(\n                        new FormGroup({\n                            name: new FormControl(this.recipe.ingredients[i].name, Validators.required),\n                            amount: new FormControl(this.recipe.ingredients[i].amount, [\n                            Validators.required,\n                            Validators.pattern(\"\\\\d+\")\n                        ])\n                    })   \n                );    \n            }\n        }\n        \n        recipeName = this.recipe.name;\n        recipeImageUrl = this.recipe.imagePath;\n        recipeContent = this.recipe.description;\n    }\n    \n    this.recipeForm = this.formBuilder.group({\n        name: [recipeName, Validators.required],\n        imagePath: [recipeImageUrl, Validators.required],\n        description: [recipeContent, Validators.required],\n        ingredients: recipeIngredients    \n    })\n  }\n}\n"]}