{"version":3,"file":"shopping-list-add.component.js","sourceRoot":"","sources":["../../src/app/shopping-list/shopping-list-add.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkE,eAAe,CAAC,CAAA;AAElF,2BAA2B,sBAAsB,CAAC,CAAA;AAClD,sCAAoC,yBAAyB,CAAC,CAAA;AAQ9D;IAKI,kCAAoB,GAAwB;QAAxB,QAAG,GAAH,GAAG,CAAqB;QAHlC,YAAO,GAAG,IAAI,mBAAY,EAAE,CAAC;QACvC,UAAK,GAAG,IAAI,CAAC;IAEkC,CAAC;IAEhD,8CAAW,GAAX,UAAY,OAAO;QACf,EAAE,CAAA,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,CAAA,CAAC;YACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,IAAI,GAAG,EAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC;QAC3C,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC;IACL,CAAC;IAED,2CAAQ,GAAR,UAAS,UAAuB;QAC5B,IAAM,aAAa,GAAG,IAAI,uBAAU,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;QACzE,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC;YACZ,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;YAC5C,IAAI,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;YAC1B,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC;IACL,CAAC;IAED,2CAAQ,GAAR;QACI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,0CAAO,GAAP;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAlCD;QAAC,YAAK,EAAE;;0DAAA;IACR;QAAC,aAAM,EAAE;;6DAAA;IARb;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,sBAAsB;YAChC,WAAW,EAAE,kCAAkC;SAClD,CAAC;;gCAAA;IAsCF,+BAAC;AAAD,CAAC,AApCD,IAoCC;AApCY,gCAAwB,2BAoCpC,CAAA","sourcesContent":["import { Component, OnChanges, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Ingredient } from \"../shared/ingredient\";\nimport { ShoppingListService } from \"./shopping-list.service\";\n\n@Component({\n    moduleId: module.id,\n    selector: 'rb-shopping-list-add',\n    templateUrl: 'shopping-list-add.component.html'\n})\n\nexport class ShoppingListAddComponent implements OnChanges {\n    @Input() item : Ingredient;\n    @Output() cleared = new EventEmitter();\n    isAdd = true;\n    \n    constructor(private sls: ShoppingListService) {}\n    \n    ngOnChanges(changes){\n        if(changes.item.currentValue === null){\n            this.isAdd = true;\n            this.item = {name: null, amount: null};\n        } else {\n            this.isAdd = false;\n        }    \n    }\n    \n    onSubmit(ingredient : Ingredient){\n        const newIngredient = new Ingredient(ingredient.name, ingredient.amount);\n        if(!this.isAdd){\n            this.sls.editItem(this.item, newIngredient);\n            this.onClear();\n        } else {\n            this.item = newIngredient;\n            this.sls.addItem(this.item);\n        }\n    }\n    \n    onDelete(){\n        this.sls.deleteItem(this.item);\n        this.onClear();\n    }\n    \n    onClear(){\n        this.isAdd = true;\n        this.cleared.emit(null);\n    }\n}"]}